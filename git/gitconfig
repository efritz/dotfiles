[user]
	name = Eric Fritz
	email = eric@eric-fritz.com

[github]
	user = efritz

[core]
	excludesfile = ~/.gitignore_global

	# Treat spaces before tabs and all kinds of trailing whitespace as an error
	# [default] trailing-space: looks for spaces at the end of a line
	# [default] space-before-tab: looks for spaces before tabs at the beginning of a line
	whitespace = space-before-tab,-indent-with-non-tab,trailing-space

	# Enable parallel I/O for operations like "git diff".
	# See http://stackoverflow.com/q/18257622/276478
	preloadindex = true

	# Use 12 characters for the abbreviated commit hash. I can currently make
	# do with 10, but this should provide a certain level of safety for the
	# near-ish future. See the interesting and well-researched article at
	# http://blog.cuviper.com/2013/11/10/how-short-can-git-abbreviate/
	abbrev = 12

[diff]
	# Use more time to create better diffs. E.g. matching opening/closing braces
	# from neighbour functions.
	algorithm = patience

	# Tells Git to detect renames. If set to "true", it will enable basic
	# rename detection. If set to "copies", it will detect copies, as well.
	renames = copies

[push]
	# Make "git push" or "git push <remote>" only push the current branch to
	# the tracked branch (regardless of its remote name) as opposed to pushing
	# all branches with a matching name on the remote. See "An asymmetry
	# between git pull and push": http://longair.net/blog/?p=572
	default = tracking

[alias]
	# Collapse "git git log"
	git = !git

	# Shorthands
	s = status -sb
	a = add
	ap = add -p

	# Amend the currently staged files to the latest commit
	amend = commit --amend -C HEAD

	# Get the name of the current branch
	branch-name = rev-parse --abbrev-ref HEAD

	# Get the lca commit between master and the current branch
	merge-base-master = merge-base master HEAD

	# Reset changes to the lca commit between master and the current branch
	reset-branch = !git reset $(git merge-base-master)

	# Rebase commits into the lca commit between master and the current branch
	rebase-branch = !git rebase -i $(git merge-base-master)

	# Push the current branch to the remote "origin", and set it to track
	# the upstream branch
	publish = !git push -u origin $(git branch-name)

	# Delete any branches that have been merged into master
	delete-merged-branches = !git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d

[filter "lfs"]
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
	clean = git-lfs clean -- %f

[url "git@github.com:"]
	insteadOf = https://github.com/

[include]
	path = ~/.gitconfig_local
